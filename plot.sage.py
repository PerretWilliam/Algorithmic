

# This file was *autogenerated* from the file plot.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_0p5 = RealNumber('0.5')
from sage.all import *

# Fonction pour lire un fichier de données et extraire les valeurs x, y
def readFile(filename):
    data = []
    with open(filename, 'r') as file:
        for line in file:
            parts = line.split()
            if len(parts) == _sage_const_3 :
                data.append((int(parts[_sage_const_1 ]), float(parts[_sage_const_2 ])))
    return data

# Liste des algorithmes et des suffixes de données
algorithms = ['stdsort', 'stable_sort', 'qsort']
suffixes = ['1', '2', '3']

# Création de graphes pour chaque algorithme et sauvegarde dans des fichiers PDF
for alg in algorithms:
    plots = []
    for suffix in suffixes:
        filename = f"{alg}{suffix}.data"
        data = readFile(filename)
        
        x = [item[_sage_const_0 ] for item in data]
        y = [item[_sage_const_1 ] for item in data]

        plot_points = points(zip(x, y), legend=f"{alg} {suffix}", rgbcolor=(_sage_const_0p5 , _sage_const_0p5 , _sage_const_0p5 ))
        plots.append(plot_points)

    combined_plot = sum(plots)
    combined_plot_title = f"Performance de {alg}"

    # Enregistrement du graphique dans un fichier PDF
    combined_plot_file = f"{alg}_performance.pdf"
    combined_plot.save(combined_plot_file)

    print(f"Graphique pour {alg} enregistré dans {combined_plot_file}")

print("Tous les graphiques ont été enregistrés.")

